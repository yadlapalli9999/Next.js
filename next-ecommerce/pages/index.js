import { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, Typography } from '@mui/material'
import Head from 'next/head'
import Image from 'next/image';
import dynamic from 'next/dynamic'
import Layout from '../components/Layout'
import NextLink from 'next/link';
import Axios from 'axios';
import styles from '../styles/Home.module.css'
// import data from '../utils/data'
import db from '../utils/db';
import Product from '../model/Product';
import { useContext } from 'react';
import { Store } from '../utils/Store';
import { useRouter } from 'next/router';

export default function Home(props) {
  let {products} =props;
  let {state,dispatch} = useContext(Store);
  let router = useRouter();
  const handleAddToCart = async(product)=>{
    let existItem = state.cart.cartItems.find(x => x._id === product._id)
    let quantity = existItem ? existItem.quantity +1 : 1;
    const {data} = await Axios.get(`/api/products/${product._id}`);
  //   dynamic(() => import(), {ssr: false})

    console.log(data)
    if(data.countInStock < quantity){
       typeof window.alert('Sorry. Product is out of Stock')
       return;
    }
    
    dispatch({type:'CART_ADD_ITEM',payload:{...product,quantity}})
    router.push('/cart')
  }
  return (
    <Layout>
      <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1>Products</h1>
        <Grid container spacing={3}>
          {
            products.map((product)=>(
              <Grid item md={4} key={product.name}>
                <Card>
                  <NextLink href={`/product/${product.slug}`} passHref>
                  <CardActionArea >
                    <CardMedia component="img" image={product.image} title={product.name}/>
                  <CardContent>
                    <Typography>{product.name}</Typography>
                  </CardContent>
                  </CardActionArea>
                  </NextLink>

                  <CardActions>
                    <Typography>${product.price}</Typography>
                    <Button size="small" color='primary' onClick={()=>handleAddToCart(product)}>Add To Cart</Button>
                  </CardActions>
                </Card>
              </Grid>
            ))
          }
        </Grid>
      </div>
    </div>
    </Layout>
    
  )
}
export async function getServerSideProps(){
  await db.connect()
  const products = await Product.find({}).lean();
  await db.disconnect()
  return {
    props:{
      //products
      products:products.map(db.convertDocToObj)
    }
  }
}
//export default dynamic(()=>Promise.resolve(Home),{ssr:false})